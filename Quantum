from qiskit import Aer
from qiskit.providers.aer import QasmSimulator
from qiskit.quantum_info import Statevector
from qiskit.circuit.library import QuantumCircuit

# create a quantum circuit with one qubit and one classical bit
qc = QuantumCircuit(1, 1)

# apply a Hadamard gate to create a superposition of 0 and 1
qc.h(0)

# measure the qubit and store the result in the classical bit
qc.measure(0, 0)

# use the qasm simulator to execute the circuit and generate a random number
backend = Aer.get_backend('qasm_simulator')
job = backend.run(qc, shots=1)
result = job.result()
counts = result.get_counts()
random_number = int(list(counts.keys())[0])

# map the random number to a number between 1 and 6
dice1 = random_number % 6 + 1
dice2 = random_number % 6 + 2

# print the result
print("Dice 1:", dice1)
print("Dice 2:", dice2)
